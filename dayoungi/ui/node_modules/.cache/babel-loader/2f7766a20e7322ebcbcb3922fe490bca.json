{"ast":null,"code":"var _jsxFileName = \"/Users/youngseonkim/Documents/project_final/dayoungi/ui/src/containers/usr/UserList.jsx\";\nimport React, { useEffect, useCallback, useState } from 'react';\nimport axios from 'axios';\nimport { User } from '../../templates';\nimport { useHistory } from \"react-router-dom\";\nimport { context as c } from '../../context'; // useEffect 시작하면 바로 시작됨\n\nconst UserList = () => {\n  const fetchAllUsers = useCallback(async () => {\n    try {\n      const req = {\n        method: c.get,\n        url: `${c.url}/api/users`\n      };\n      const res = await axios(req);\n      setData(res.data);\n    } catch (error) {\n      alert(`fetchAllUsers failure`);\n      throw error;\n    }\n  }); // 혹시 안되면 ) 전에 [] 더할것\n\n  const [data, setData] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    fetchAllUsers();\n  }, []); // useEffect(() => {\n  //     axios.get('http://localhost:8080/api/users')\n  //     .then(res=>{\n  //         // alert(`list Success`)\n  //         console.log(typeof(res.Data))\n  //         setData(res.data) // database 안에 있는 데이터 res.data['lname'] 이런식으로 뽑을 수 있음\n  //     })\n  //     .catch(e =>{\n  //         alert(`list Fail`)\n  //         throw(e)\n  //     } )\n  // },[])\n\n  const search = e => {\n    const u_id = document.getElementById('search').value;\n    localStorage.setItem(\"user_id\", u_id);\n    history.push('/usersearch');\n  };\n\n  return /*#__PURE__*/React.createElement(User, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Search ID : \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"User ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Gender (M or F)\")), data.map((i, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, i.user_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, i.fname), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, i.lname), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, i.age), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, i.gender)))));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/Users/youngseonkim/Documents/project_final/dayoungi/ui/src/containers/usr/UserList.jsx"],"names":["React","useEffect","useCallback","useState","axios","User","useHistory","context","c","UserList","fetchAllUsers","req","method","get","url","res","setData","data","error","alert","history","search","e","u_id","document","getElementById","value","localStorage","setItem","push","map","i","index","user_id","fname","lname","age","gender"],"mappings":"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","sourcesContent":["import React, {useEffect,useCallback, useState} from 'react'\nimport axios from 'axios'\nimport {User} from '../../templates'\nimport {useHistory } from \"react-router-dom\"\nimport { context as c } from '../../context'\n\n\n// useEffect 시작하면 바로 시작됨\nconst UserList = () => {\n    const fetchAllUsers = useCallback(async () => {\n        try{\n            const req = {\n                method: c.get, \n                url: `${c.url}/api/users`\n            }\n            const res = await axios(req)   \n            setData(res.data)\n        }catch(error){\n            alert(`fetchAllUsers failure`)\n            throw(error)\n        }\n    }) // 혹시 안되면 ) 전에 [] 더할것\n    \n    const [data, setData] = useState([])\n    const history = useHistory()\n    useEffect(() => {fetchAllUsers()},[]) \n    // useEffect(() => {\n    //     axios.get('http://localhost:8080/api/users')\n    //     .then(res=>{\n    //         // alert(`list Success`)\n    //         console.log(typeof(res.Data))\n    //         setData(res.data) // database 안에 있는 데이터 res.data['lname'] 이런식으로 뽑을 수 있음\n    //     })\n    //     .catch(e =>{\n    //         alert(`list Fail`)\n    //         throw(e)\n    //     } )\n    // },[])\n    const search = e => {\n        const u_id = document.getElementById('search').value\n        localStorage.setItem(\"user_id\", u_id)\n        history.push('/usersearch')\n    }\n\n    return (<User>\n        Search ID : <input type=\"text\" id='search'/> \n            <button onClick={search}>Search</button>\n        <table>\n            <tr>\n                <th>User ID</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Age</th>\n                <th>Gender (M or F)</th>\n            </tr>\n            {data.map((i, index)=>(\n                <tr key={index}>\n                    <td>{i.user_id}</td>\n                    <td>{i.fname}</td>\n                    <td>{i.lname}</td>\n                    <td>{i.age}</td>\n                    <td>{i.gender}</td>\n                </tr>\n            ))}\n            \n        </table>\n    </User>)\n}\n\nexport default UserList"]},"metadata":{},"sourceType":"module"}